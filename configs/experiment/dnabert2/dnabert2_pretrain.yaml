# @package _global_
defaults:
  - /pipeline: dnabert2_pretrain
  # - override /scheduler: cosine_warmup_timm
  - override /scheduler: linear_warmup

# model:
#   _name_: denoise_cnn
#   for_representation: true
#   alphabet_size: 5
#   num_cls: 0
#   d_model: 128
#   length: ${dataset.max_length}
#   kernel_size: 9
#   dilation: 4
#   out_dim: 2
#   use_outlinear: False
#   mlp: True
#   pretrain: False
#   forget: True
#   num_conv1d: 5
#   final_conv: False
#   use_comp: True
#   d_inner: 2
#   args:
#     clean_data: false
#     hidden_dim: 128
#     cls_expanded_simplex: true
#     mode: dilation
#     num_cnn_stacks: 1
#     dropout: 0.0
#     cls_free_guidance: false
#     alpha_max: 8
#     fix_alpha: 1e6
#     alpha_scale: 2
#     prior_pseudocount: 2
#     seed: ${train.seed}
model:
  _name_: dnabert2
  config:
    _name_or_path: null
    alibi_starting_size: 512
    attention_probs_dropout_prob: 0.0
    auto_map: 
      AutoConfig: configuration_bert.BertConfig
      AutoModel: bert_layers.BertModel
      AutoModelForMaskedLM: bert_layers.BertForMaskedLM
      AutoModelForSequenceClassification: bert_layers.BertForSequenceClassification
    classifier_dropout: null
    gradient_checkpointing: false
    hidden_act: gelu
    hidden_dropout_prob: 0.1
    hidden_size: 768
    initializer_range: 0.02
    intermediate_size: 3072
    layer_norm_eps: 1e-12
    max_position_embeddings: 512
    model_type: bert
    num_attention_heads: 12
    num_hidden_layers: 12
    pad_token_id: 0
    position_embedding_type: absolute
    torch_dtype: bfloat16
    transformers_version: 4.28.1
    type_vocab_size: 2
    use_cache: true
    vocab_size: 4096 # 16 for char, 4096 for bpe
    hyena_framework: true

task:
  # _name_: lm
  _name_: hg38  # equivalent to lm task, plus allows extra metrics to be calculated
  loss: bert_cross_entropy

trainer:
  accelerator: gpu
  devices: 4
  num_nodes: 1
  # accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  accumulate_grad_batches: 4
  max_epochs: 1000
  precision: bf16  # bf16 only a100
  gradient_clip_val: 1.0
  # strategy: ddp
  resume_from_checkpoint: /gpfs/gibbs/pi/gerstein/xt86/by/hyena-dna/outputs/2024-08-14/17-07-08-054527/checkpoints/last.ckpt
  # strategy:
  #   _target_: pytorch_lightning.strategies.DeepSpeedStrategy
  #   stage: 2

dataset:
  batch_size: 800 # Per GPU
  # batch_size: 8  # this is the test batch size (and final train batch size)
  max_length: 128 # note this is the test max length (and the final train max_length) + 2
  # optional, default is max_length
  max_length_val: ${dataset.max_length}
  max_length_test: ${dataset.max_length}
  tokenizer_name: bpe
  pad_max_length: null  # needed for bpe tokenizer only
  add_eos: false
  rc_aug: false
  num_workers: 12
  text_file: /gpfs/gibbs/pi/gerstein/xt86/by/hyena-dna/data/dnabert2
  objective: stdmlm

scheduler:
  t_in_epochs: False
  # t_initial: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  t_initial: ${eval:500000 * 2 }
  warmup_lr_init: 0
  # warmup_t: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  warmup_t: ${eval:30000 * 2}
  # lr_min: ${eval:0.1 * ${optimizer.lr}}
  lr_min: 0

optimizer:
  lr: 5e-4
  weight_decay: 1e-5
  betas: [0.9, 0.98]

train:
  remove_test_loader_in_eval: false  # no test set in this benchmark
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: ${eval:${trainer.devices}*${dataset.batch_size}}  # effects the scheduler, need to set properly
  pretrained_model_path: null