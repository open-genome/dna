# @package _global_
defaults:
  - /pipeline: nucleotide_transformer
  - override /scheduler: cosine_warmup_timm

# model: 
#   _name_: convnext
#   d_model: 128
#   # max_length: ${dataset.max_length}
#   max_length: 8193
#   vocab_size: 12
#   pad_vocab_size_multiple: 8
#   k_size: 5

model:
  _name_: caduceus
  mode: ph
  size: 1.9

decoder: null # decoder in cnn

task:
  # 2 options for soft_cross_entropy (for mixup)
  _name_: masked_multiclass
  loss: cross_entropy
    # label_smoothing: 0.1
  # pass in list of k's
  # last_k_ppl: null
  torchmetrics: null

trainer:
  accelerator: gpu
  devices: 2
  num_nodes: 1
  accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 20
  precision: 32  # bf16 only a100
  gradient_clip_val: 1.0
  # strategy: null

# name maxlen classes samples metric

# enhancer 200   2  14968 MCC
# enhancer_types 200   3  14968 MCC
# H3 500   2  13468 MCC
# H3K4me1  500   2  28509 MCC
# H3K4me2  500   2  27614 MCC
# H3K4me3  500   2  33119 MCC
# H3K9ac   500   2  25003 MCC
# H3K14ac  500   2  29743 MCC
# H3K36me3 500   2  31392 MCC
# H3K79me3 500   2  25953 MCC
# H4 500   2  13140 MCC
# H4ac  500   2  30685 MCC
# promoter_all   300   2  53276 F1
# promoter_non_tata 300   2  47759 F1
# promoter_tata  300   2  5517  F1
# splice_sites_acceptor   600   2  19961 F1
# splice_sites_donor   600   2  19775 F1


dataset:
  # batch_size: 32  # Per GPU
  batch_size: 128
  # max_length: 515 # select max that you want for this dataset
  # dataset_name: 'human_nontata_promoters'
  dataset_name: 'splice_sites_donor'
  # dest_path: '/mnt/nas/share2/home/by/hyena-dna/data/genomic_benchmark/'
  # d_output: 3  # binary classification by default
  # use_padding: True
  # padding_side: 'left'
  # add_eos: False
  # train_len: 289061  # update this according to above table
  # __l_max: ${.max_length}
  tokenizer_name: char
  use_tokenizer: True
  add_eos: false
  rc_aug: false  # reverse complement augmentation
  return_mask: false
  padding_side: left
  # num_workers: 1
  # rc_aug: true  # reverse complement augmentation.  Didn't seem to help for human_nontata_promoters, but could be wrong

scheduler:
  t_in_epochs: False
  t_initial: ${eval:${div_up:${dataset.train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  warmup_lr_init: 1e-6
  warmup_t: ${eval:${div_up:${dataset.train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  lr_min: ${eval:0.1 * ${optimizer.lr}}

  # constant
  # t_initial: ${eval:${div_up:${dataset.train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  # warmup_t: 0
  # lr_min: ${optimizer.lr}



optimizer:
  lr: 1e-3
  weight_decay: 0.1

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: ${eval:${trainer.devices}*${dataset.batch_size}}
  remove_test_loader_in_eval: false  # no test set in this benchmark