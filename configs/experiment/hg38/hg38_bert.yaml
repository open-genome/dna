# @package _global_
defaults:
  - /pipeline: bert_hg38
  - override /scheduler: cosine_warmup_timm

# model:
#   _name_: lm
#   d_model: 128
#   n_layer: 4
#   d_inner: ${eval:4 * ${.d_model}}
#   vocab_size: 12
#   resid_dropout: 0.0
#   embed_dropout: 0.1
#   fused_mlp: False # figure out how to use fused MLP, maybe only with bf16 + a100
#   fused_dropout_add_ln: False
#   checkpoint_mixer: False  # set true for memory reduction
#   checkpoint_mlp: False  # set true for memory reduction
#   residual_in_fp32: True
#   pad_vocab_size_multiple: 8
#   layer:
#     _name_: bert
#     intermediate_size: 256
#     num_heads: 8
#     # layer_idx: null
#     # device: null
#     # dtype: null
#   length: ${eval:${dataset.max_length}-1}

# nt
# model:
#   _name_: denoise_cnn
#   for_representation: false
#   alphabet_size: 5
#   num_cls: 0
#   d_model: 128
#   pretrain: true
#   length: 1024
#   mlp: true
#   kernel_size: 9
#   dilation: 4
#   use_outlinear: False
#   forget: True
#   args:
#     clean_data: false
#     hidden_dim: 128
#     cls_expanded_simplex: true
#     mode: dirichlet
#     num_cnn_stacks: 1
#     dropout: 0.0
#     cls_free_guidance: false
#     alpha_max: 8
#     fix_alpha: 1e6
#     alpha_scale: 2
#     prior_pseudocount: 2
#     seed: ${train.seed}

model:
  _name_: denoise_cnn
  for_representation: false
  alphabet_size: 5
  num_cls: 0
  d_model: 128
  pretrain: true
  length: 1024
  mlp: true
  kernel_size: 9
  dilation: 2
  use_outlinear: False
  forget: True
  use_comp: True
  num_conv1d: 5
  d_inner: 2
  args:
    clean_data: false
    hidden_dim: 128
    cls_expanded_simplex: true
    mode: dilation
    num_cnn_stacks: 1
    dropout: 0.0
    cls_free_guidance: false
    alpha_max: 8
    fix_alpha: 1e6
    alpha_scale: 2
    prior_pseudocount: 2
    seed: ${train.seed}

# genomic benchmark
# model:
#   _name_: denoise_cnn
#   for_representation: true
#   alphabet_size: 5
#   num_cls: 0
#   d_model: 64
#   length: ${dataset.max_length}
#   kernel_size: 5
#   dilation: 4
#   out_dim: 2
#   use_outlinear: False
#   mlp: True
#   pretrain: True
#   forget: True
#   num_conv1d: 5
#   d_inner: 4
#   final_conv: true
#   args:
#     clean_data: false
#     hidden_dim: 64
#     cls_expanded_simplex: true
#     mode: dirichlet
#     num_cnn_stacks: 1
#     dropout: 0.0
#     cls_free_guidance: false
#     alpha_max: 8
#     fix_alpha: 1e6
#     alpha_scale: 2
#     prior_pseudocount: 2
#     seed: ${train.seed}

task:
  # _name_: lm
  _name_: hg38  # equivalent to lm task, plus allows extra metrics to be calculated
  loss: bert_cross_entropy

trainer:
  accelerator: gpu
  devices: 8
  num_nodes: 1
  accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 200
  precision: 16  # bf16 only a100
  gradient_clip_val: 1.0
  # strategy: null

dataset:
  batch_size: 128  # Per GPU
  # batch_size: 256
  max_length: 1024 # 262144, 524288
  # optional, default is max_length
  max_length_val: ${dataset.max_length}
  max_length_test: ${dataset.max_length}
  tokenizer_name: char
  use_tokenizer: False
  pad_max_length: null  # needed for bpe tokenizer
  add_eos: true
  rc_aug: false
  num_workers: 12
  use_fixed_len_val: false  # placing a fixed length val here, but it's really the test
  replace_N_token: false  # replace N (uncertain token) with pad tokens in dataloader
  pad_interval: false  # handle uncertain tokens within the FastaInteral class  

scheduler:
  t_in_epochs: False
  t_initial: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  warmup_lr_init: 1e-6
  warmup_t: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  lr_min: ${eval:0.1 * ${optimizer.lr}}

optimizer:
  lr: 1e-3
  weight_decay: 0.0

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: 512  # effects the scheduler, need to set properly
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-19/19-29-10-248255/checkpoints/test/loss.ckpt # 1 128
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-19/19-34-36-452288/checkpoints/test/loss.ckpt # 1 64
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-19/17-56-00-286498/checkpoints/test/loss.ckpt # 1 256
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-19/18-10-31-505110/checkpoints/test/loss.ckpt # 2 512

  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-21/09-59-36-718970/checkpoints/test/loss.ckpt # 2 128 
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-21/10-56-09-861622/checkpoints/test/loss.ckpt # 3 dilation
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-21/11-41-42-025355/checkpoints/test/loss.ckpt # 2 dilation


  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-20/19-03-42-476497/checkpoints/test/loss.ckpt # 2 196 for bend  
  

  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-20/02-08-03-985141/checkpoints/test/loss.ckpt one dilation pretrain
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-20/13-17-21-918669/checkpoints/test/loss.ckpt # pure gate
  # /mnt/nas/share2/home/by/hyena-dna/outputs/2024-05-21/04-18-02-067901/checkpoints/test/loss.ckpt # up down
