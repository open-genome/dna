# @package _global_
defaults:
  - /pipeline: dnabert2_pretrain
  - override /scheduler: cosine_warmup_timm

model:
  _name_: ntv2
  config:
    _name_or_path: null
    add_bias_fnn: false
    architectures:
      - EsmForMaskedLM
      - EsmForTokenClassification
      - EsmForSequenceClassification
    attention_probs_dropout_prob: 0.0
    auto_map:
      AutoConfig: "esm_config.EsmConfig"
      AutoModelForMaskedLM: "modeling_esm.EsmForMaskedLM"
      AutoModelForSequenceClassification: "modeling_esm.EsmForSequenceClassification"
      AutoModelForTokenClassification: "modeling_esm.EsmForTokenClassification"
    emb_layer_norm_before: false
    esmfold_config: null
    hidden_dropout_prob: 0.0
    hidden_size: 1024
    initializer_range: 0.02
    intermediate_size: 4096
    is_folding_model: false
    layer_norm_eps: 1e-12
    mask_token_id: 2
    max_position_embeddings: 2050
    model_type: esm
    num_attention_heads: 16
    num_hidden_layers: 29
    pad_token_id: 1
    position_embedding_type: rotary
    tie_word_embeddings: false
    token_dropout: false
    torch_dtype: float32
    transformers_version: 4.28.0
    use_cache: false
    vocab_list: null
    vocab_size: 4096
    hyena_framework: true

task:
  # _name_: lm
  _name_: hg38  # equivalent to lm task, plus allows extra metrics to be calculated
  loss: bert_cross_entropy

trainer:
  accelerator: gpu
  devices: 4
  num_nodes: 1
  # accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 1000
  precision: bf16  # bf16 only a100
  gradient_clip_val: 1.0
  strategy: ddp

dataset:
  batch_size: 800 # Per GPU
  # batch_size: 8  # this is the test batch size (and final train batch size)
  max_length: 128 # note this is the test max length (and the final train max_length) + 2
  # optional, default is max_length
  max_length_val: ${dataset.max_length}
  max_length_test: ${dataset.max_length}
  tokenizer_name: bpe
  pad_max_length: null  # needed for bpe tokenizer only
  add_eos: false
  rc_aug: false
  num_workers: 12
  text_file: /gpfs/gibbs/pi/gerstein/xt86/by/hyena-dna/data/dnabert2
  objective: stdmlm

scheduler:
  t_in_epochs: False
  # t_initial: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  t_initial: 500000
  warmup_lr_init: 1e-6
  # warmup_t: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  warmup_t: 30000
  # lr_min: ${eval:0.1 * ${optimizer.lr}}
  lr_min: 0

optimizer:
  lr: 6e-4
  weight_decay: 1e-5

train:
  remove_test_loader_in_eval: false  # no test set in this benchmark
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: ${eval:${trainer.devices}*${dataset.batch_size}}  # effects the scheduler, need to set properly
  pretrained_model_path: null